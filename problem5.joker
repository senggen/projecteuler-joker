;; Problem 5
;; Smallest multiple

(defn divides? 
  [m n] 
  (zero? (rem m n)))

(defn prime?
  [n]
  (and (> n 1) (not-any? #(divides? n %) (range 2 n))))

(defn get_factors
  [x y]
  (let [rg (range (inc x) (inc y))
        primes (filter prime? rg)
        pick_factor (fn [acc i] 
          (loop [product i factors acc]
            (if (< product y)
              (recur (* product i) (cons i factors))
              factors)))]
    (reduce pick_factor () primes)))

(defn f
  [x y]
  (let [fl (get_factors x y)]
    (reduce * fl)))

(println (f 1 20))
